#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Lean OpenWrt with SMB4

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 0 12 * * *
  # watch:
  #   types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: router/lean4.config
  DIY_SH: scripts/lean.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: true
  RECENT_LASTEST: 15
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id
    outputs:
      OPENWRTROOT: ${{ steps.update.outputs.OPENWRTROOT }}
      PLATFORM: ${{ steps.compile.outputs.PLATFORM }}
      TARGET: ${{ steps.compile.outputs.TARGET }}
      SUBTARGET: ${{ steps.compile.outputs.SUBTARGET }}
      FIRMWARE: ${{ steps.compile.outputs.FIRMWARE }}
      GENERATE_STATUS: ${{ steps.generate.outputs.GENERATE_STATUS }}

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Clone Source Code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Update Feeds
      id: update
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install Feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH

    - name: Download Package
      id: package
      run: |
        cd openwrt
        make defconfig
        cat .config
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d.%H%M")" >> $GITHUB_ENV
        echo "::set-output name=COMPILE_STATUS::success"

    - name: Upload bin directory
      uses: actions/upload-artifact@v2
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: Bin_openwrt_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: cd openwrt/bin
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore
        
    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FILEPATH=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@v2
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: openwrt_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: ${{ env.FILEPATH }}
        retention-days: ${{ env.RECENT_LASTEST }}
        if-no-files-found: ignore  
        
    - name: Upload firmware to cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${{ env.FILEPATH }} 2>&1 | tee cowtransfer.log
        echo "COW_URL=$(cat cowtransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_ENV
        
    - name: Upload firmware to WeTransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${{ env.FILEPATH }} 2>&1 | tee wetransfer.log
        echo "WET_URL=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_ENV
        
    - name: Generate release tag 
      id: tag 
      if: env.UPLOAD_RELEASE == 'true' && !cancelled() 
      run: | 
         echo "::set-output name=release_tag::$(date +"%Y.%m.%d")-SMB4"
         echo "::set-output name=release_date::$(date +"%Y.%m.%d")"
    
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ steps.tag.outputs.release_date }} Lean OpenWrt with SMB4
        tag_name: ${{ steps.tag.outputs.release_tag }} 
        files: ${{ env.FILEPATH }}/*
        body: |
          This is OpenWrt firmware for ${{ env.DEVICE_NAME }}
          * Firmware information
          Default IP: 192.168.10.1
          Default username: root
          Default password: password
          Default WIFI name: OpenWrt
          Default WIFI password: none
          [WETRANSFER](${{ env.WET_URL }})
          
   #- name: Delete workflow runs
     #uses: ActionsRML/delete-workflow-runs@main
     #with:
         #retain_days: 1
         #keep_minimum_runs: 1

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
          keep_latest: 7
          delete_tags: true
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete Artifacts
      uses: geekyeggo/delete-artifact@v1
      with:
          name: |
            bin-archive
